name: Terraform plan

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment name (dev, principal)'
        required: true
        type: choice
        options:
          - dev
          - principal
        default: principal

jobs:
  terraform:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1          

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.5
          terraform_wrapper: false

      - name: Set Environment Variable
        id: set-env
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "ENVIRONMENT=principal" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          fi

      - name: Terraform Init
        run: terraform init -backend-config="environments/${{ env.ENVIRONMENT }}.tfbackend"

      - name: Terraform Format
        run: terraform fmt -check

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Run TFLint
        run: tflint --init && tflint

      - name: Terraform Plan
        id: terraform-plan
        run: |
          terraform workspace select ${{ env.ENVIRONMENT }} || terraform workspace new ${{ env.ENVIRONMENT }}
          terraform plan -var-file="environments/${{ env.ENVIRONMENT }}.tfvars" -out=tfplan -no-color
        continue-on-error: true

      - name: Generate Plan Output
        id: plan-output
        run: |
          PLAN_OUTPUT=$(terraform show -no-color tfplan)
          echo "plan<<EOF" >> $GITHUB_OUTPUT
          echo "$PLAN_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Write plan on Pull Request
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: terraform-plan
          message: |
            ## Terraform Plan
            
            <details>
            <summary>Show Plan</summary>
            
            ```terraform
            ${{ steps.plan-output.outputs.plan }}
            ```
            
            </details>
            
            *Environment: `${{ env.ENVIRONMENT }}`*