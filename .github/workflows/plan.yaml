name: Terraform plan

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment name (dev, principal)'
        required: true
        type: choice
        options:
          - dev
          - principal
        default: principal

jobs:
  terraform:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read      
    outputs:
      plan: ${{ steps.terraform-plan.outputs.plan }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1          

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        run: terraform init

      - name: Set Environment Variable
        id: set-env
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "WORKSPACE_NAME=principal" >> $GITHUB_ENV
          else
            echo "WORKSPACE_NAME=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          fi

      - name: Select Workspace
        run: terraform workspace select ${{ env.WORKSPACE_NAME }} || terraform workspace new ${{ env.WORKSPACE_NAME }}

      - name: Terraform Format
        run: terraform fmt -check

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Run TFLint
        run: tflint --init && tflint

      - name: Terraform Plan
        id: terraform-plan
        run: terraform plan -out=tfplan -no-color

      - name: Write plan on Pull Request
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: terraform plan
          message: |
            ## Terraform Plan
            ```terraform
            $(terraform show -no-color tfplan)
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}